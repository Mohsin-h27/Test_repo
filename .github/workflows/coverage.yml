name: Coverage Report

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  generate_coverage:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    name: Generate and Publish Coverage
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # Use Python 3.9, or whichever version you need

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Generate .coverage
        run: |
          coverage run -m pytest tests  # Run tests in the "tests" directory

      - name: Coverage comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_PR_RUN_ID: ${{ github.event.workflow_run.id }}

      - name: Run Additional Script
        id: run-script
        run: |
          # Run your script here (e.g., python script.py)
          python your_script.py > result.txt
          
      - name: Post script results as a comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const result = fs.readFileSync('result.txt', 'utf8');
            const prNumber = ${{ github.event.pull_request.number }};
            
            const commentBody = `### Script Results\n\n\`\`\`\n${result}\n\`\`\``;
            
            const response = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody,
            });
